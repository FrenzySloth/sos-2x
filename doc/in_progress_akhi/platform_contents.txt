***********************************
Platform: mica2: include:
***********************************

CC1000Const.h
	- Contains a list of defines for the radio.

cc1k.h
	- Contains extern defs of a number of functions used for the cc1k radio

cc1k_lpl.h
	- Defines PreambleLength, SleepTime and SleepPreamble.

cc1k_params_const.h
	- Defines CC1k_Params

codemem_conf.h
	- Defines the code memory. Creates typedefs for addr and pages. Enumerates a number of things based on the configuration of the make. The beginning and the end of the codememory is defined based on the size allowed. 

exflash.h
	- Specifies a number of functions and characteristics for the eeprom. The characteristics include number of pages, page size, and also the log2 of the page size. The actual page length is larger than 2^8 so the last 8 bytes will be disregarded. Might want to specify that the numbers are in bytes.

hardware.h
	- Includes tons of header files for different components of the board, also optionally includes SFI's memmap.h, optiionally contains dispatches for radio, uart and i2c.

hardware_types.h
	It simply defines _SOS_HARDWARE_TYPES_H_ and includes hardware_proc.h from processor/avr

kertable_plat.h
	- Enumerates all the ker table entries. Maybe the info here can be combined with module_plat.h
led.h
	- LED specific definations. Indicates how leds are initialized, turned on, off and toggled.
	- If this is not the compilation of a module, then the file extern defines ker_led which can be used by the kernel to use the leds

malloc_conf.h
	- Sets up information needed for malloc
	- Information includes block_size, heap size and the layout of the heap indicating where different kernel portions go

module_plat.h
	- sets up the jump table. based on the function been called, this module routes it to the correct function in the jump table as defined in the kertable_plat.h.
	- Maybe the info here can be combined with kertable_plat.h

pid_plat.h
	- enumerates the PID for power mgmt, micasb, timer3, exflash, uart, i2c, ic2 mgr
	- contains some strange notes to be looked at

pin_map.h
	- makes assignments for LED, ChipCon, Flash, Interrupt, power control
	- It also defines init_IO function which is coded in hardware.c

plat_msg_types.h
	- enumerates the device specific messages. These include the radio and flash messages

radio_spi.h
	- Radio SPI related functions.
	- Functions include: spi_isBufBusy, spi_writeByte, spi_init, spi_readByte
	- Additional functions added to the file include spi_enableIntr, spi_disableIntr, spi_txmode, spi_rxmode

sensorboards.h
	- Lists all the sensor boards supported by the platform. Based on the board selected, this will include the particular sensordriver
	- MICASB
	- MTS400SB

***********************************
Platform: mica2:
***********************************
Makerules:
	- Adds SMICA2_PLATFORM to DEFS.
	- If not using i2c, includes DNO_SOS_I2C
	- Defines PROCESSOR to be avr

	- Adds the platform, drivers/uart, drivers/i2c to VPATH and INCDIR
	- If the build is for the kernel
	     - Includes all the source files from the platform, uart and i2c
	     - Includes either ubmac or cc1k radio based on the RADIOSTACK
	     - Includes one_wire: Is it still needed????

	- Invokes the processor's makerules
	- If uisp is desired, starts that

	- Configures the installer
	- Adds mica2_install for installing the sw.

cc1k.c
	- Nothing special

cc1k_cnt.c
	- NOthing special

cc1k_radio.c
	- Nothing special

cc1k_ubmac.c
	- Implements the ubmac.
	- No fancy includes

exflash.c
	- Implements the external flash.
	- No fancy includes

hardware.c
	- Based on setup of SOS_SFI, PROC_KER_TABLE, PLAT_KER_TABLE ker_jumptable is setup differently.
	- The watchdog timer can be disabled or enabled and based on that it can or not be initialized here. 
	      - Can move led_init so that if watchdog timer is disabled, the led is still initalized.
	- Based on usage of uart1, uart, i2c, radio, mica2_peripheral those functions can be initialized or not.
	- Note contains movement of one_wire related functions

led.c
	- Implements teh ker_led function

radio_spi.c
	- ISR for SPI. 
	- Implements functions defined in radio_spi.h

***********************************
Processor: avr: include
***********************************
adc_proc_hw.h
	- adc related functions which are hardware dependent

adc_proc.h
	- adc related functions defs

cross_domain_cf.h
	- blah

crc.h
	- crc related functions

flash.h
	-flash related functions and defines

eeprom1_11.h
	- eeprom related functions and defines

i2c.h
	- i2c related function and defines

hardware_proc.h
	- implements some functions for the hardware such as hardware_sleep, enable, disable intrs, critical sections, wd, sos_header related

kertable_proc.h
	- setting up the jump table which will be looked into by module_proc.h for different functions used by the kernel

kertable_conf.h
	- defines get_kertable_entry

memmap_checker_const.h
	- blah

measurement.h
	- simon's stuff

module_proc.h
	- setting up the jumptable so that the functions called by the kernel can be routed to the right function in the processor

memmap_conf.h
	- configuring where the memmap resides

pid_proc.h
	- enumeration for i2c, uart, adc pids

pgmspace1_16.h
	- defines for lpm and elpm

pin_defs.h
	- carries out a number of defs for the pins of the port on the hardware

pin_alt_func.h
	- defines the alternative defs of the different pins in the hardware

sfi_exception.h
	- enumerates a number of defines for sfi 

proc_msg_types.h
	- enumeration for i2c and uart messages

sos_link_conf.h
	- just a typedef for func_addr_t

sfi_jumptable.h
	- setup for sfi

systime.h
	- Some Defines and some spi specific functions

spi_hal.h
	- Defines for spi

timer_conf.h
	- Some config parameters for picking the clock source, some default parameters
	- This is hardware independent

timer.h
	- Defines a number of functions for using the timer
	- This is hardware dependent

uart_hal.h
	- Defines settings for different BAUD rates
	- Checks for uart0 or uart1
	- defines a number of functions used to access the uart module
	- defines a uart_hardware_init function

***********************************
Processor: avr:
***********************************
