README
------
SOS Catch is a tool for connecting custom message handlers to an SOS server.

AUTHOR
------
Written by Peter Mawhorter (code largely copied from test_sossrv_client.c). If
you find problems with the code or would like extra functionality, send
mail to pmawhworter@cs.hmc.edu or the sos-users mailing list.

USAGE
-----
import "sos_catch.h"

...

sos_subscribe(char *ADDRESS, char *PORT, recv_msg_func_t FUNCTION)

ABOUT
-----
This code is a simplification of the sos_server API. The tool's purpose is to
simplify the writing of C code for handling SOS messages: just write a function
that has the same specs as the catch function in the catch_surge.c file and
call the sos_subscribe method on it. You need to give sos_subscribe an address
and port to connect to. If you're running sos_srv on the same machine you will
run your code on, these will probably be "127.0.0.1" and "7915". To build your
code, simply change the first like of the Makefile that declares "PROJ =
catch_surge" to use your code instead of catch_surge. You may have to alter the
Makefile further so that your code will be able to find the headers it needs.
Once this is done, 'make x86' (or 'make ppc' if you're using a PowerPC Mac)
should turn your code into an executable. In your code after the call to
sos_subscribe you'll probably need to do something like:

while (1) {
  sleep(1);
}

So that the process keeps running (a seperate thread is spawned by the
sos_server API to handle catching messages, but it dies if the main thread
returns).

INCLUDED PROGRAMS
----------------
Included in this directory is catch_surge.c, a simple application which uses
sos_catch to print out detailed information on surge messages. It is set up as
the default target, so you can compile it using 'make x86' (or 'make ppc' if
you're on a PowerPC Mac). See the directions under "TESTING" below for how to
run it.

Also included are surge_dump.c and surge_db.c. These are alternate
implementations of catch_surge.c which write message information into a file
and to a database respectively. To build them, just change the PROJ line at the
top of the Makefile.

surge_db.c uses the freely available SQLite3 database software which creates a
database in a single file. To use surge_db as the catching function, you'll
need to first set up a database. This can be accomplished by typing "make
setup_db.exe" and then running the resulting "setup_db.exe" file.  The name of
the database file must be set the same in both setup_db.c and surge_db.c, but
it can be changed from the default "messages.sql". If the make command for
setup_db.exe fails with a linker error, you'll need to change the library
search path in the make file: see the comments in the make file about that.
Once the database file has been created, you can compile using "make ppc" just
like normal, assuming that you've changed the PROJ line in the Makefile.
Running surge_db.exe should then put messages into the database. You can use
the sqlite3 command-line tool to look at the database or write your own
programs to read it (Python has built-in sqlite3 support as of version 2.5).

TESTING
-------
Run the SOS Surge tutorial at:

https://projects.nesl.ucla.edu/public/sos-2x/doc/tutorial/surge_mica2.html

Once you're getting messages at the base station (you'll see them appear in the
sos_server terminal), run catch_surge.exe in another terminal. For each message
printed to the sos_server screen, a message should be printed to the
catch_surge screen. The catch_surge printout should look similar, and if the
message is a Surge message (type 34), the catch_surge window should display a
detailed listing of the entire message contents, including a line for Reading
which contains the sensor reading. Now cover up the photosensor on the MTS310
and watch the reading number change in the Surge packets.

